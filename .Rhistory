source()
submit()
submit()
submit()
type Sys.getlocale("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 15, minutes = 13, seconds = 55)
this_moment
?now
nyc <- now("America/New_York")
nyc
depart <- nyc+days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive,"Asia/Hong_Kong")
arrive <- with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time = mdy("June 17, 2008",tz="Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval()
?new_interval
how_long <- new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
install.packages("png")
install.packages("grid")
?diff
??grid.raster
?readPNG
??readPNG
packageVersion("swirl")
install.packages(c("BH", "knitr"))
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(data="pollution", pm25~region, col="red")
boxplot(data=pollution, pm25~region, col="red")
boxplot(pm25~region, data=pollution,  col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region="east")
east <- subset(pollution, region=="east")
head(east)
hist(east,col="green")
hist(data=east,col="green")
hist(east, col = "green")
hist(ppm[east], col = "green")
hist(east, col = "green")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution,plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitute,pollution$ppm,col=pollution$region)
plot(pollution$latitute,pollution$ppm,col=pollution$region)
plot(pollution$latitude,pollution$ppm,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
source('~/SYNC/Dropbox/Coursera/Data Science/4 - Exploratory Data Analysis/CourseProject1/ExData_Plotting1/plot1.R')
?connections
?unz
source('~/SYNC/Dropbox/Coursera/Data Science/4 - Exploratory Data Analysis/CourseProject1/ExData_Plotting1/plot1.R')
source('~/SYNC/Dropbox/Coursera/Data Science/4 - Exploratory Data Analysis/CourseProject1/ExData_Plotting1/plot1.R')
source('~/SYNC/Dropbox/Coursera/Data Science/4 - Exploratory Data Analysis/CourseProject1/ExData_Plotting1/plot1.R')
source('~/SYNC/Dropbox/Coursera/Data Science/4 - Exploratory Data Analysis/CourseProject1/ExData_Plotting1/plot1.R')
head(data)
source('~/SYNC/Dropbox/Coursera/Data Science/4 - Exploratory Data Analysis/CourseProject1/ExData_Plotting1/plot1.R')
source('~/SYNC/Dropbox/Coursera/Data Science/4 - Exploratory Data Analysis/CourseProject1/ExData_Plotting1/plot1.R')
head(data)
str(data)
head(data)
str(data)as.DatÃ§
?as.Date
?strptime
data?read.table()
?read.table
source('~/SYNC/Dropbox/Coursera/Data Science/4 - Exploratory Data Analysis/CourseProject1/ExData_Plotting1/plot1.R')
data$Date <- as.Date(data$Date)
data$Time <- strptime(data$Time)
head(data)
str(data)
?strptime
source('~/SYNC/Dropbox/Coursera/Data Science/4 - Exploratory Data Analysis/CourseProject1/ExData_Plotting1/plot1.R')
data$TS <- as.POSIXct(paste(data$Date,data$Time), format="%D/%M/%Y;%H:%M:%S") # simplest way?
head(data)
str(data)
nrow(data)
# Read the file from the zip file.
data <- read.table(grep("1/2/2007",unz("household_power_consumption.zip","household_power_consumption.txt")),
header = T,sep = ";",stringsAsFactors = FALSE, na.strings = "NA")
# There are 2M lines on that data set. Let's filter some,
# Let's unify the date and time.
#data$TS <- as.POSIXct(paste(data$Date,data$Time), format="%D/%M/%Y;%H:%M:%S") # simplest way?
#head(data)
#str(data)
nrow(data)
# Read the file from the zip file.
data <- read.table(unz("household_power_consumption.zip","household_power_consumption.txt"),
header = T,sep = ";",stringsAsFactors = FALSE, na.strings = "NA")
# There are 2M lines on that data set. Let's filter some,
data <- data[data$Date == "1/2/2007" | data$Date == "2/2/2007",]
# Let's unify the date and time.
#data$TS <- as.POSIXct(paste(data$Date,data$Time), format="%D/%M/%Y;%H:%M:%S") # simplest way?
#head(data)
#str(data)
nrow(data)
# Let's unify the date and time.
data$TS <- as.POSIXct(paste(data$Date,data$Time), format="%D/%M/%Y %H:%M:%S") # simplest way?
head(data)
str(data)
data$TS <- paste(data$Date,data$Time)
#as.POSIXct(paste(data$Date,data$Time), format="%D/%M/%Y %H:%M:%S") # simplest way?
head(data)
str(data)
data <- data[data$Date == "1/2/2007" | data$Date == "2/2/2007",]
# Let's unify the date and time.
data$TS <- paste(data$Date,data$Time)
data$TT <- dmy_hms(data$TS) # simplest way?
head(data)
str(data)
# Let's unify the date and time.
data$TS <- dmy_hms(paste(data$Date,data$Time))
head(data)
str(data)
data <- data[data$Date == "1/2/2007" | data$Date == "2/2/2007",]
# Let's unify the date and time.
data$TS <- dmy_hms(paste(data$Date,data$Time))
# Let's correct the Global_active_power class.
data$Global_active_power <- as.numeric(data$Global_active_power)
head(data)
str(data)
hist(data$Global_active_power,color="red")
hist(data$Global_active_power,color="red",main = "Global Active Power",xlab = "Global Active Power (kilowatts)")
# Let's create the histogram.
hist(data$Global_active_power,col="red",main = "Global Active Power",xlab = "Global Active Power (kilowatts)")
png(filename="plot1.png")
hist(data$Global_active_power,col="red",main = "Global Active Power",xlab = "Global Active Power (kilowatts)")
dev.off()
setwd("~/SYNC/Dropbox/Coursera/Data Science/4 - Exploratory Data Analysis/CourseProject1/ExData_Plotting1")
# Script to create the first plot for the Assignment: Course Project 1,
# Exploratory Data Analysis course.
library(lubridate)
# Download the data file from UCI if it is not already in a local file.
if (!file.exists("household_power_consumption.zip")) {
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url,destfile="household_power_consumption.zip",method="curl",mode = "wb")
}
# Read the file from the zip file.
data <- read.table(unz("household_power_consumption.zip","household_power_consumption.txt"),
header = T,sep = ";",stringsAsFactors = FALSE, na.strings = "?")
# There are 2M lines on that data set. Let's filter some, reduce to 2880.
data <- data[data$Date == "1/2/2007" | data$Date == "2/2/2007",]
# Let's unify the date and time.
data$TS <- dmy_hms(paste(data$Date,data$Time))
# Let's correct the Global_active_power class.
data$Global_active_power <- as.numeric(data$Global_active_power)
# Let's create the histogram.
png(filename="plot1.png")
hist(data$Global_active_power,col="red",main = "Global Active Power",xlab = "Global Active Power (kilowatts)")
dev.off()
# Script to create the first plot for the Assignment: Course Project 1,
# Exploratory Data Analysis course.
library(lubridate)
# Download the data file from UCI if it is not already in a local file.
if (!file.exists("household_power_consumption.zip")) {
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url,destfile="household_power_consumption.zip",method="curl",mode = "wb")
}
# Read the file from the zip file.
data <- read.table(unz("household_power_consumption.zip","household_power_consumption.txt"),
header = T,sep = ";",stringsAsFactors = FALSE, na.strings = "?")
# There are 2M lines on that data set. Let's filter some, reduce to 2880.
data <- data[data$Date == "1/2/2007" | data$Date == "2/2/2007",]
# Let's unify the date and time.
data$TS <- dmy_hms(paste(data$Date,data$Time))
# Let's correct the Global_active_power class.
data$Global_active_power <- as.numeric(data$Global_active_power)
# Let's create the histogram, on a PNG file,
png(filename="plot1.png")
hist(data$Global_active_power,col="red",main = "Global Active Power",xlab = "Global Active Power (kilowatts)")
dev.off()
# Script to create the first plot for the Assignment: Course Project 1,
# Exploratory Data Analysis course.
library(lubridate)
# Download the data file from UCI if it is not already in a local file.
if (!file.exists("household_power_consumption.zip")) {
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url,destfile="household_power_consumption.zip",method="curl",mode = "wb")
}
# Read the file from the zip file.
data <- read.table(unz("household_power_consumption.zip","household_power_consumption.txt"),
header = T,sep = ";",stringsAsFactors = FALSE, na.strings = "?")
# There are 2M lines on that data set. Let's filter some, reduce to 2880.
data <- data[data$Date == "1/2/2007" | data$Date == "2/2/2007",]
# Let's unify the date and time.
data$TS <- dmy_hms(paste(data$Date,data$Time))
# Let's correct the Global_active_power class.
data$Global_active_power <- as.numeric(data$Global_active_power)
# Let's create the line plot, on a PNG file,
#png(filename="plot2.png")
hist(data$Global_active_power,ylab = "Global Active Power (kilowatts)")
#dev.off()
# Let's create the line plot, on a PNG file,
#png(filename="plot2.png")
plot(weekdays(data$TS),data$Global_active_power,ylab = "Global Active Power (kilowatts)")
#dev.off()
plot(data$TS,data$Global_active_power,ylab = "Global Active Power (kilowatts)")
plot(data$TS,data$Global_active_power,type = "l",
ylab = "Global Active Power (kilowatts)")
png(filename="plot2.png")
plot(data$TS,data$Global_active_power,type = "l",
ylab = "Global Active Power (kilowatts)")
dev.off()
png(filename="plot2.png")
plot(data$TS,data$Global_active_power,type = "l",
ylab = "Global Active Power (kilowatts)",xlab="")
dev.off()
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l")
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l")
lines(data$TS,data$Sub_metering_2,type = "l")
lines(data$TS,data$Sub_metering_3,type = "l")
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="blue")
lines(data$TS,data$Sub_metering_3,type = "l",col="red")
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="red")
lines(data$TS,data$Sub_metering_3,type = "l",col="blue")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="red")
lines(data$TS,data$Sub_metering_3,type = "l",col="blue")
legend("topright")
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="red")
lines(data$TS,data$Sub_metering_3,type = "l",col="blue")
legend("topright",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
#dev.off()
#png(filename="plot3.png")
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="red")
lines(data$TS,data$Sub_metering_3,type = "l",col="blue")
legend("topright",pch=1,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
#dev.off()
#png(filename="plot3.png")
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="red")
lines(data$TS,data$Sub_metering_3,type = "l",col="blue")
legend("topright",lty=c(1,1),col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
#dev.off()
# Script to create the first plot for the Assignment: Course Project 1,
# Exploratory Data Analysis course.
library(lubridate)
# Download the data file from UCI if it is not already in a local file.
if (!file.exists("household_power_consumption.zip")) {
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url,destfile="household_power_consumption.zip",method="curl",mode = "wb")
}
# Read the file from the zip file.
data <- read.table(unz("household_power_consumption.zip","household_power_consumption.txt"),
header = T,sep = ";",stringsAsFactors = FALSE, na.strings = "?")
# There are 2M lines on that data set. Let's filter some, reduce to 2880.
data <- data[data$Date == "1/2/2007" | data$Date == "2/2/2007",]
# Let's unify the date and time.
data$TS <- dmy_hms(paste(data$Date,data$Time))
# Let's correct the Sub_metering* classes.
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
# Let's create the line plot, on a PNG file,
png(filename="plot3.png")
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="red")
lines(data$TS,data$Sub_metering_3,type = "l",col="blue")
legend("topright",lty=c(1,1),col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
# Script to create the first plot for the Assignment: Course Project 1,
# Exploratory Data Analysis course.
library(lubridate)
# Download the data file from UCI if it is not already in a local file.
if (!file.exists("household_power_consumption.zip")) {
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url,destfile="household_power_consumption.zip",method="curl",mode = "wb")
}
# Read the file from the zip file.
data <- read.table(unz("household_power_consumption.zip","household_power_consumption.txt"),
header = T,sep = ";",stringsAsFactors = FALSE, na.strings = "?")
# There are 2M lines on that data set. Let's filter some, reduce to 2880.
data <- data[data$Date == "1/2/2007" | data$Date == "2/2/2007",]
# Let's unify the date and time.
data$TS <- dmy_hms(paste(data$Date,data$Time))
# Let's correct the classes.
data$Global_active_power <- as.numeric(data$Global_active_power)
data$Global_reactive_power <- as.numeric(data$Global_reactive_power)
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
# Let's create the line plot, on a PNG file,
#png(filename="plot4.png")
par(mfrow=c(2,2))
# Top left plot
plot(data$TS,data$Global_active_power,type = "l",
ylab = "Global Active Power (kilowatts)",xlab="")
# Bottom left plot
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="red")
lines(data$TS,data$Sub_metering_3,type = "l",col="blue")
legend("topright",lty=c(1,1),col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
#dev.off()
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
data$Voltage <- as.numeric(data$Voltage)
# Let's create the line plot, on a PNG file,
#png(filename="plot4.png")
par(mfrow=c(2,2))
# Top left plot
plot(data$TS,data$Global_active_power,type = "l",
ylab = "Global Active Power (kilowatts)",xlab="")
# Top right plot
plot(data$TS,data$Voltage,type = "l",
ylab = "Voltage",xlab="datetime")
# Bottom left plot
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="red")
lines(data$TS,data$Sub_metering_3,type = "l",col="blue")
legend("topright",lty=c(1,1),col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
#dev.off()
#png(filename="plot4.png")
par(mfrow=c(2,2))
# Top left plot
plot(data$TS,data$Global_active_power,type = "l",
ylab = "Global Active Power (kilowatts)",xlab="")
# Top right plot
plot(data$TS,data$Voltage,type = "l",
ylab = "Voltage",xlab="datetime")
# Bottom left plot
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="red")
lines(data$TS,data$Sub_metering_3,type = "l",col="blue")
legend("topright",lty=c(1,1),col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
# Bottom right plot
plot(data$TS,data$Global_reactive_power,type = "l",
ylab = "Global_reactive_power",xlab="datetime")
# Script to create the first plot for the Assignment: Course Project 1,
# Exploratory Data Analysis course.
library(lubridate)
# Download the data file from UCI if it is not already in a local file.
if (!file.exists("household_power_consumption.zip")) {
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url,destfile="household_power_consumption.zip",method="curl",mode = "wb")
}
# Read the file from the zip file.
data <- read.table(unz("household_power_consumption.zip","household_power_consumption.txt"),
header = T,sep = ";",stringsAsFactors = FALSE, na.strings = "?")
# There are 2M lines on that data set. Let's filter some, reduce to 2880.
data <- data[data$Date == "1/2/2007" | data$Date == "2/2/2007",]
# Let's unify the date and time.
data$TS <- dmy_hms(paste(data$Date,data$Time))
# Let's correct the classes.
data$Global_active_power <- as.numeric(data$Global_active_power)
data$Global_reactive_power <- as.numeric(data$Global_reactive_power)
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
data$Voltage <- as.numeric(data$Voltage)
# Let's create the line plot, on a PNG file,
png(filename="plot4.png")
par(mfrow=c(2,2))
# Top left plot
plot(data$TS,data$Global_active_power,type = "l",
ylab = "Global Active Power (kilowatts)",xlab="")
# Top right plot
plot(data$TS,data$Voltage,type = "l",
ylab = "Voltage",xlab="datetime")
# Bottom left plot
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="red")
lines(data$TS,data$Sub_metering_3,type = "l",col="blue")
legend("topright",lty=c(1,1),col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
# Bottom right plot
plot(data$TS,data$Global_reactive_power,type = "l",
ylab = "Global_reactive_power",xlab="datetime")
dev.off()
# Clean up (since we will commit this to GIT)
if (file.exists("household_power_consumption.zip")) {
file.remove("household_power_consumption.zip")
}
))
# Script to create the first plot for the Assignment: Course Project 1,
# Exploratory Data Analysis course.
library(lubridate)
# Download the data file from UCI if it is not already in a local file.
if (!file.exists("household_power_consumption.zip")) {
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url,destfile="household_power_consumption.zip",method="curl",mode = "wb")
}
# Read the file from the zip file.
data <- read.table(unz("household_power_consumption.zip","household_power_consumption.txt"),
header = T,sep = ";",stringsAsFactors = FALSE, na.strings = "?")
# There are 2M lines on that data set. Let's filter some, reduce to 2880.
data <- data[data$Date == "1/2/2007" | data$Date == "2/2/2007",]
# Let's unify the date and time.
data$TS <- dmy_hms(paste(data$Date,data$Time))
# Let's correct the classes.
data$Global_active_power <- as.numeric(data$Global_active_power)
data$Global_reactive_power <- as.numeric(data$Global_reactive_power)
data$Sub_metering_1 <- as.numeric(data$Sub_metering_1)
data$Sub_metering_2 <- as.numeric(data$Sub_metering_2)
data$Sub_metering_3 <- as.numeric(data$Sub_metering_3)
data$Voltage <- as.numeric(data$Voltage)
# Let's create the line plot, on a PNG file,
png(filename="plot4.png")
par(mfrow=c(2,2))
# Top left plot
plot(data$TS,data$Global_active_power,type = "l",
ylab = "Global Active Power (kilowatts)",xlab="")
# Top right plot
plot(data$TS,data$Voltage,type = "l",
ylab = "Voltage",xlab="datetime")
# Bottom left plot
plot(data$TS,data$Sub_metering_1,type = "n",
ylab = "Energy sub metering",xlab="")
lines(data$TS,data$Sub_metering_1,type = "l",col="black")
lines(data$TS,data$Sub_metering_2,type = "l",col="red")
lines(data$TS,data$Sub_metering_3,type = "l",col="blue")
legend("topright",lty=c(1,1),col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
# Bottom right plot
plot(data$TS,data$Global_reactive_power,type = "l",
ylab = "Global_reactive_power",xlab="datetime")
dev.off()
# Clean up (since we will commit this to GIT)
if (file.exists("household_power_consumption.zip")) {
file.remove("household_power_consumption.zip")
}
